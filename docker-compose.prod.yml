version: '3.8'

services:
  # RabbitMQ (optional in prod if you already run a managed broker)
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: store24h-rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER:-guest}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASSWORD:-guest}
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Hono.js Accelerator (Valkey TLS)
  hono-accelerator:
    build: ./hono-accelerator
    container_name: store24h-hono-accelerator
    ports:
      - "3001:3000"
    environment:
      - PORT=3000
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_SSL=true
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - RABBITMQ_HOST=${RABBITMQ_HOST:-rabbitmq}
      - RABBITMQ_PORT=${RABBITMQ_PORT:-5672}
      - RABBITMQ_USER=${RABBITMQ_USER:-guest}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD:-guest}
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Main Spring Boot API (Valkey TLS)
  store24h-api:
    build: .
    container_name: store24h-api
    ports:
      - "80:80"
    environment:
      - LISTEN_PORT=80
      - SPRING_PROFILES_ACTIVE=prod
      # MySQL
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_PORT=${MYSQL_PORT:-3306}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      # Mongo
      - MONGO_URL=${MONGO_URL}
      # Valkey (ElastiCache)
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_SSL=true
      - REDIS_USERNAME=${REDIS_USERNAME:-}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      # RabbitMQ for Spring
      - SPRING_RABBITMQ_HOST=${RABBITMQ_HOST:-rabbitmq}
      - SPRING_RABBITMQ_PORT=${RABBITMQ_PORT:-5672}
      - SPRING_RABBITMQ_USERNAME=${RABBITMQ_USER:-guest}
      - SPRING_RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD:-guest}
      # Warmup
      - CACHE_WARMING_ENABLED=${CACHE_WARMING_ENABLED:-true}
    depends_on:
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  rabbitmq_data:
    driver: local
