services:
  # RabbitMQ Service for SMS Message Processing
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: store24h-rabbitmq
    hostname: rabbitmq
    ports:
      - "5672:5672"   # AMQP port
      - "15672:15672" # Management UI port
    environment:
      - RABBITMQ_DEFAULT_USER=guesta
      - RABBITMQ_DEFAULT_PASS=guesta
      - RABBITMQ_DEFAULT_VHOST=/
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Dragonfly Service - High Performance Redis Alternative
  dragonfly:
    image: docker.dragonflydb.io/dragonflydb/dragonfly:latest
    container_name: store24h-dragonfly
    ports:
      - "6379:6379"
    command: >
      --maxmemory=24gb
      --maxmemory-policy=allkeys-lru
      --save=900,1,300,10,60,10000
      --tcp-keepalive=60
      --timeout=0
      --tcp-backlog=511
      --databases=16
      --stop-writes-on-bgsave-error=no
      --rdbcompression=yes
      --rdbchecksum=yes
      --appendonly=yes
      --appendfsync=everysec
      --auto-aof-rewrite-percentage=100
      --auto-aof-rewrite-min-size=64mb
      --logtostderr
      --v=1
    volumes:
      - dragonfly_data:/data
    networks:
      - app-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 24G
          cpus: '2.0'
        reservations:
          memory: 20G
          cpus: '1.0'
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 10s

  # Beautiful React Dashboard
  dashboard:
    build: ./dashboard
    container_name: store24h-dashboard
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://store24h-api:80
      - REACT_APP_DRAGONFLY_URL=dragonfly://dragonfly:6379
      - REACT_APP_DASHBOARD_TITLE=Store24h Warmup Dashboard
      - REACT_APP_DASHBOARD_SUBTITLE=Dragonfly Performance Monitor
    depends_on:
      store24h-api:
        condition: service_started
    restart: unless-stopped
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '0.5'
        reservations:
          memory: 512M
          cpus: '0.25'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Hono.js Accelerator Microservice
  hono-accelerator:
    build: ./hono-accelerator
    container_name: store24h-hono-accelerator
    ports:
      - "3001:3000"
    environment:
      - PORT=3000
      - DRAGONFLY_HOST=dragonfly
      - DRAGONFLY_PORT=6379
    depends_on:
      dragonfly:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Main Application Service
  store24h-api:
    build: .
    container_name: store24h-api
    ports:
      - "80:80" # Map container port 80 to host port 80
    environment:
      # Application settings
      - LISTEN_PORT=80
      - SPRING_PROFILES_ACTIVE=docker

      # External MySQL Database settings (defined in .env file)
      - MYSQL_HOST=${MYSQL_HOST}
      - MYSQL_PORT=${MYSQL_PORT}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      
      # External MongoDB settings (defined in .env file)
      - MONGO_URL=${MONGO_URL}

      # Dragonfly Container settings (High Performance Redis Alternative)
      - DRAGONFLY_HOST=dragonfly
      - DRAGONFLY_PORT=6379
      - DRAGONFLY_PASSWORD=

      # Database configuration
      - HIBERNATE_DDL_AUTO=${HIBERNATE_DDL_AUTO}
      
      # Redis configuration
      - USE_REDIS_REMOTE=false
      
      # Cache warming configuration - Aggressive intervals for t3.2xlarge
      - CACHE_WARMING_ENABLED=${CACHE_WARMING_ENABLED:-true}
      - CACHE_WARMING_CHIP_MODEL_ONLINE_RATE=${CACHE_WARMING_CHIP_MODEL_ONLINE_RATE:-30000}
      - CACHE_WARMING_CHIP_MODEL_RATE=${CACHE_WARMING_CHIP_MODEL_RATE:-30000}
      - CACHE_WARMING_SMS_MODEL_RATE=${CACHE_WARMING_SMS_MODEL_RATE:-30000}
      - CACHE_WARMING_SMS_STRING_MODEL_RATE=${CACHE_WARMING_SMS_STRING_MODEL_RATE:-30000}
      - CACHE_WARMING_SERVICOS_RATE=${CACHE_WARMING_SERVICOS_RATE:-60000}
      - CACHE_WARMING_CHIP_NUMBER_CONTROL_RATE=${CACHE_WARMING_CHIP_NUMBER_CONTROL_RATE:-60000}
      - CACHE_WARMING_V_OPERADORAS_RATE=${CACHE_WARMING_V_OPERADORAS_RATE:-60000}
      - CACHE_WARMING_USERS_RATE=${CACHE_WARMING_USERS_RATE:-120000}
      - CACHE_WARMING_NUMBERS_RATE=${CACHE_WARMING_NUMBERS_RATE:-120000}
      - CACHE_WARMING_CONFIGS_RATE=${CACHE_WARMING_CONFIGS_RATE:-120000}
      - CACHE_WARMING_BALANCE_RATE=${CACHE_WARMING_BALANCE_RATE:-300000}
      - CACHE_WARMING_OPERATORS_RATE=${CACHE_WARMING_OPERATORS_RATE:-120000}
      - CACHE_WARMING_CNC_INCREMENTAL_RATE=${CACHE_WARMING_CNC_INCREMENTAL_RATE:-30000}
      - CACHE_WARMING_CNC_RECONCILE_RATE=${CACHE_WARMING_CNC_RECONCILE_RATE:-300000}
      - CACHE_WARMING_ALIAS_INCREMENTAL_RATE=${CACHE_WARMING_ALIAS_INCREMENTAL_RATE:-30000}
      - CACHE_WARMING_ALIAS_RECONCILE_RATE=${CACHE_WARMING_ALIAS_RECONCILE_RATE:-300000}
      - CACHE_WARMING_APIKEY_RATE=${CACHE_WARMING_APIKEY_RATE:-120000}
      
      # RabbitMQ configuration
      - RABBITMQ_HOST=rabbitmq

    depends_on:
      dragonfly:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 6G
          cpus: '6.0'
        reservations:
          memory: 4G
          cpus: '4.0'

volumes:
  dragonfly_data:
    driver: local
  rabbitmq_data:
    driver: local

networks:
  app-network:
    driver: bridge